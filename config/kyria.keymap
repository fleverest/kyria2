#define DEFAULT 0
#define L_NUMS 1
#define L_TEXT 2

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
			bindings = <
	&kp TAB          &kp Q &kp W &kp E &kp R &kp T                                                                     &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSLH
	&lt L_NUMS GRAVE &kp A &kp S &kp D &kp F &kp G                                                                     &kp H &kp J  &kp K     &kp L   &kp SEMI &lt L_NUMS SQT
	&kp LSHFT        &kp Z &kp X &kp C &kp V &kp B   &kp LALT &none                         &none          &none       &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
	                    &mo L_TEXT &kp LGUI &kp LBKT &kp BSPC &mt LCTRL DEL                 &mt RCTRL RET  &kp SPACE &kp RBKT &kp RALT &none
			>;
		};

		nums_layer {
			bindings = <
	&kp F11   &kp F1    &kp F2    &kp F3    &kp F4    &kp F5                                              &kp F6    &kp F7    &kp F8    &kp F9    &kp F10   &kp F12
	&kp ESC   &kp N1    &kp N2    &kp N3    &kp N4    &kp N5                                              &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &trans
	&trans    &trans    &trans    &trans    &kp EQUAL &trans    &trans    &trans      &trans    &trans    &trans    &kp MINUS &trans    &trans    &trans    &trans
	                              &trans    &trans    &trans    &trans    &trans      &trans    &trans    &trans    &trans    &trans
			>;
		};

		text_layer {
			bindings = <
	&bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &out OUT_TOG                                              &kp HOME  &kp PG_DN &kp PG_UP &kp END   &trans    &trans
	&trans          &trans          &trans          &trans          &trans          &trans                                                    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &trans    &trans
	&bt BT_CLR      &trans          &trans          &trans          &trans          &trans          &trans    &trans      &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans
	                                                &trans          &trans          &trans          &trans    &trans      &trans    &trans    &trans    &trans    &trans
			>;
		};
	};
};
///*
// * Copyright (c) 2020 The ZMK Contributors
// *
// * SPDX-License-Identifier: MIT
// */
//
//#include <behaviors.dtsi>
//#include <dt-bindings/zmk/keys.h>
//
//// Bluetooth
//#include <dt-bindings/zmk/bt.h>
//
//#define ALPH_LAY 0
//#define NUMS_LAY 1
//#define SPCL_LAY1 2
//#define SPCL_LAY2 3
//
//#define NONE 0
//
//
/// {
//	keymap {
//		compatible = "zmk,keymap";
//
//		default_layer {
//// ---------------------------------------------------------------------------------------------------------------------------------
//// | ESC  |  '  |  ,  |  .   |  P   |  Y   |                                               |  F   |  G  |  C  |  R  |  L  | ESC  |
//// | TAB  |  A  |  O  |  E   |  U   |  I   |                                               |  D   |  H  |  T  |  N  |  S  |   -  |
//// | CTRL |  ;  |  Q  |  J   |  K   |  X   | SPCL_LAY1 | LC(SHIFT) |    | NUMS_LAY |  ALT  |  B  |  M  |  W  |  V  |  Z  | CTRL |
////                        | GUI  | ESC  | DEL  |  SPACE  |   RET   |    |   SHIFT  | SPACE | BSPC  | TAB  | R-ALT |
//			bindings = <
//	&kp ESC   &kp APOS &kp COMMA &kp DOT &kp P &kp Y                                                  &kp F &kp G  &kp C &kp R   &kp L &kp ESC
//	&kp TAB   &kp A &kp O &kp E &kp U &kp I                                                  &kp D &kp H  &kp T &kp N   &kp S &kp MINUS
//	&kp CTRL  &kp SEMI &kp Q &kp J &kp K &kp X &mo SPCL_LAY1 &kp LC(SHIFT) &mo NUMS_LAY &kp ALT &kp B &kp M  &kp W &kp V   &kp Z &kp RCTRL
//	                &kp LGUI &kp ESC &kp DEL &kp SPACE &kp RET            &kp SHIFT  &kp SPACE  &kp BSPC &kp TAB &kp RALT
//			>;
//
//			//sensor-bindings = <&inc_dec_kp J K &inc_dec_kp B W>;
//		};
//
//		number_layer {
//// ---------------------------------------------------------------------------------------------------------------------------------
//// | ESC  |  `  |  {  |  (   |  [   |  <   |                                               |  >   |  ]  |  )  |  }  |  ~  | ESC  |
//// | TAB  |  1  |  2  |  3   |  4   |  5   |                                               |  6   |  7  |  8  |  9  |  0  |   -  |
//// | CTRL |  ;  | NA  |  \   |  NA  |  NA  | SPCL_LAY2 | LC(SHIFT) |    | SPCL_LAY2 |  ALT  |  NA |  NA |  /  |  NA |  NA | CTRL |
////                        | GUI  | ESC  | DEL  |  SPACE  |   RET   |    |   SHIFT   | SPACE | BSPC  | TAB  | R-ALT |
//			bindings = <
//	&kp ESC &kp GRAVE &kp LBRC &kp KP_LPAR &kp LBKT &kp LT                               &kp GT &kp RBKT &kp KP_RPAR &kp RBRC &kp TILDE &kp ESC
//	&kp TAB &kp 1 &kp 2 &kp 3 &kp 4 &kp 5                                                &kp 6 &kp 7  &kp 8     &kp 9   &kp 0 &kp MINUS
//	&kp CTRL &kp SEMI &none &kp BSLH &none &none  &mo SPCL_LAY2   &kp LC(SHIFT) &mo NUMS_LAY &kp ALT &none &none  &kp FSLH &none &none &kp RCTRL
//	                 &kp LGUI &kp ESC &kp DEL &kp SPACE &kp RET        &kp SHIFT  &kp SPACE  &kp BSPC &kp TAB &kp RALT
//			>;
//
//			//sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_BRI_UP C_BRI_DN>;
//		};
//	};
//
//};
